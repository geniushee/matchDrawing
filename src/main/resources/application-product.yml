spring:
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://new-sql-sever.database.windows.net:1433;database=basic;user=${secret.azure.serverAdmin}@new-sql-sever;password=${secret.azure.password};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${secret.azure.username}
    password: ${secret.azure.password}
  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.SQLServerDialect
  threads:
    virtual:
      enabled: true
#  kafka:
#    bootstrap-servers: localhost:19092
#    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    consumer:
#      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
#  rabbitmq:
#    host: "${custom.rabbitmq.host}"
#    port: "${custom.rabbitmq.port}"
#    stompPort: "${custom.rabbitmq.stompPort}"
#    username: "${custom.rabbitmq.username}"
#    password: "${custom.rabbitmq.password}"

logging:
  level:
    com.example.matchingdrawing : debug
    org.hibernate.sql : debug
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
#    org.springframework.kafka : debug

custom:
  site:
    product:
      domain: localhost
      frontUrl: "https://${custom.site.product.domain}:${server.port}"
      backUrl: "https://${custom.site.product.domain}:${server.port}"

#  jwt:
#    secretKey: ${custom.jwt.key}