spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:./test_db;DB_CLOSE_DELAY=-1;MODE=MYSQL;
    username:
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        default_batch_fetch_size: 100
        use_sql_comments: true
    open-in-view: false
  threads:
    virtual:
      enabled: true
#  kafka:
#    bootstrap-servers: localhost:19092
#    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    consumer:
#      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
#  rabbitmq:
#    host: "${custom.rabbitmq.host}"
#    port: "${custom.rabbitmq.port}"
#    stompPort: "${custom.rabbitmq.stompPort}"
#    username: "${custom.rabbitmq.username}"
#    password: "${custom.rabbitmq.password}"

logging:
  level:
    com.example.matchdrawing : debug
    org.hibernate.SQL : debug
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # SQL 바인딩 정보 표시
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE  # SQL 추출 정보 표시
    org.springframework.transaction.interceptor: TRACE
#    org.springframework.kafka : debug

custom:
  site:
    domain: localhost
    frontUrl: "http://${custom.site.domain}:${server.port}"
    backUrl: "http://${custom.site.domain}:${server.port}"
#  jwt:
#    secretKey: ${custom.jwt.key}